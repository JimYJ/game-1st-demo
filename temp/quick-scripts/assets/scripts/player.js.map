{"version":3,"sources":["player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","repeatForever","sequence","playJumpSound","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","toLeft","toRight","stopLeft","stopRight","onLoad","jumpAction","node","runAction","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","leftArea","find","rightArea","Node","TOUCH_START","TOUCH_END","onDestroy","start","update","dt","Math","abs","x","half","winSize","width"],"mappings":"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","file":"player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        }\r\n    },\r\n\r\n    setJumpAction: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n        // var callback = cc.callFunc(this.playJumpSound, this)\r\n        // 不断重复\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\r\n    },\r\n\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, this)\r\n    },\r\n\r\n    onKeyDown(event) {\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break\r\n        }\r\n    },\r\n\r\n    onKeyUp(event) {\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break\r\n        }\r\n    },\r\n\r\n    toLeft: function () {\r\n        this.accLeft = true;\r\n    },\r\n    toRight: function () {\r\n        this.accRight = true;\r\n    },\r\n\r\n    stopLeft: function () {\r\n        this.accLeft = false;\r\n    },\r\n    stopRight: function () {\r\n        this.accRight = false;\r\n    },\r\n\r\n    onLoad: function () {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        this.xSpeed = 0;\r\n\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this)\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this)\r\n\r\n        var leftArea = cc.find(\"Canvas/left_area\");\r\n        var rightArea = cc.find(\"Canvas/right_area\");\r\n        leftArea.on(cc.Node.EventType.TOUCH_START, this.toLeft, this);\r\n        rightArea.on(cc.Node.EventType.TOUCH_START, this.toRight, this);\r\n        leftArea.on(cc.Node.EventType.TOUCH_END, this.stopLeft, this);\r\n        rightArea.on(cc.Node.EventType.TOUCH_END, this.stopRight, this);\r\n    },\r\n\r\n    onDestroy: function () {\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this)\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this)\r\n    },\r\n\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n        // 限制边界\r\n        // var size = cc.view.getFrameSize();\r\n        var half = cc.winSize.width / 2;\r\n        // let windowSize = cc.view.getVisibleSize();\r\n        // cc.log(\"width1=\" + windowSize.width + \",height=\" + windowSize.height);\r\n        // windowSize = cc.winSize;//推荐  原因  短\r\n        // cc.log(\"width2=\" + windowSize.width + \",height=\" + windowSize.height);\r\n        // cc.log(\"width3=\" + size.width + \",height=\" + size.height);\r\n        if (Math.abs(this.node.x) >= half) {\r\n            this.node.x = half * this.node.x / Math.abs(this.node.x)\r\n        }\r\n    },\r\n});\r\n"]}